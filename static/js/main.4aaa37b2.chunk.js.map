{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","toRender","initialValue","howToSotr","reverse","sortedGoods","sort","el1","el2","localeCompare","length","action","className","onClick","type","map","item","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAkBA,IAAMC,EAhBN,SAAgBC,EAAcC,EAAWC,GACvC,IAAMC,EAAW,YAAOH,GAYxB,MAVkB,iBAAdC,EACFE,EAAYC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,cAAcD,MAC1B,eAAdL,GACTE,EAAYC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIG,OAASF,EAAIE,UAG9CN,GACFC,EAAYD,UAGPC,EAGQM,CAAOjB,EAAiBG,EAAWE,GAEpD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAa,iBAC5BgB,KAAK,SACLF,UAAS,yBAAkC,iBAAdf,EAA+B,GAAK,YAHnE,iCAQA,wBACEgB,QAAS,kBAAMf,EAAa,eAC5BgB,KAAK,SACLF,UAAS,4BAAqC,eAAdf,EAA6B,GAAK,YAHpE,4BAQA,wBACEgB,QAAS,kBAAMb,GAAeD,IAC9Be,KAAK,SACLF,UAAS,6BAAwBb,GAAc,YAHjD,qBAQA,wBACEc,QAAS,WACPf,EAAa,IACbE,GAAc,IAEhBc,KAAK,SACLF,UAAS,sCAA+C,KAAdf,IAAmC,IAAfE,IAAwB,SANxF,sBAYF,6BACGE,EAASc,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,YC7EvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4aaa37b2.chunk.js","sourcesContent":["\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  function action(initialValue, howToSotr, reverse) {\n    const sortedGoods = [...initialValue];\n\n    if (howToSotr === 'sortAlphabet') {\n      sortedGoods.sort((el1, el2) => el1.localeCompare(el2));\n    } else if (howToSotr === 'sortLength') {\n      sortedGoods.sort((el1, el2) => el1.length - el2.length);\n    }\n\n    if (reverse) {\n      sortedGoods.reverse();\n    }\n\n    return sortedGoods;\n  }\n\n  const toRender = action(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField('sortAlphabet')}\n          type=\"button\"\n          className={`button is-info ${sortField === 'sortAlphabet' ? '' : 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField('sortLength')}\n          type=\"button\"\n          className={`button is-success ${sortField === 'sortLength' ? '' : 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField('');\n            setIsReversed(false);\n          }}\n          type=\"button\"\n          className={`button is-danger is-light ${!(sortField !== '' || isReversed === true) && 'hiden'}`}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {toRender.map(item => <li key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}