{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","reserVisible","byAlphabetLight","byLengthLight","reverseLight","reversedState","App","useState","visibleGoods","setVisibleGoods","className","onClick","sortIt","sort","el1","el2","localeCompare","reverse","type","install","length","map","item","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGEC,GAAe,EACfC,GAAkB,EAClBC,GAAgB,EAChBC,GAAe,EACfC,GAAgB,EAEPC,EAAM,WACjB,MAAwCC,mBAASP,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAsDA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAxDW,WACjB,IAAMC,EAAS,YAAIJ,GAAcK,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,cAAcD,MAEtEN,GACoB,IAAlBJ,EACEO,EAEAA,EAAOK,WAGXhB,GAAe,EACfC,GAAkB,EAClBC,GAAgB,GA6CVe,KAAK,SACLR,UAAS,yBAAoBR,GAAmB,YAChDiB,SAAO,EAJT,iCAUA,wBACER,QAnDS,WACf,IAAMC,EACF,YAAIJ,GAAcK,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIM,OAASL,EAAIK,UAE1DX,GACoB,IAAlBJ,EACEO,EAGAA,EAAOK,WAGXhB,GAAe,EACfE,GAAgB,EAChBD,GAAkB,GAsCZgB,KAAK,SACLR,UAAS,4BAAuBP,GAAiB,YAHnD,4BAQA,wBACEQ,QA1CQ,WACdF,EACE,YAAID,GAAcS,WAEpBhB,GAAe,EACfG,GAAgC,IAAjBA,IAA0B,EACzCC,GAAkC,IAAlBA,IAA2B,GAqCrCa,KAAK,SACLR,UAAS,4BAAuBN,GAAgB,YAHlD,qBAQA,wBACEO,QAzCM,WACZF,EACET,GAEFC,GAAe,EACfC,GAAkB,EAClBC,GAAgB,EAChBC,GAAe,EACfC,GAAgB,GAkCVa,KAAK,SACLR,UAAS,oCAA+BT,GAAgB,SAH1D,sBASF,6BACGO,EAAaa,KAAI,SAAAC,GAAI,OAAI,6BAAKA,aCnHvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de50258a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n// import { link } from 'fs';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nlet reserVisible = true;\nlet byAlphabetLight = true;\nlet byLengthLight = true;\nlet reverseLight = true;\nlet reversedState = false;\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n\n  const byAlphabet = () => {\n    const sortIt = [...visibleGoods].sort((el1, el2) => el1.localeCompare(el2));\n\n    setVisibleGoods(\n      reversedState === false ? (\n        sortIt\n      ) : (\n        sortIt.reverse()\n      ),\n    );\n    reserVisible = false;\n    byAlphabetLight = false;\n    byLengthLight = true;\n  };\n\n  const byLength = () => {\n    const sortIt\n      = [...visibleGoods].sort((el1, el2) => el1.length - el2.length);\n\n    setVisibleGoods(\n      reversedState === false ? (\n        sortIt\n      ) : (\n        sortIt,\n        sortIt.reverse()\n      ),\n    );\n    reserVisible = false;\n    byLengthLight = false;\n    byAlphabetLight = true;\n  };\n\n  const reverse = () => {\n    setVisibleGoods(\n      [...visibleGoods].reverse(),\n    );\n    reserVisible = false;\n    reverseLight = reverseLight === false && true;\n    reversedState = reversedState === false && true;\n  };\n\n  const reset = () => {\n    setVisibleGoods(\n      goodsFromServer,\n    );\n    reserVisible = true;\n    byAlphabetLight = true;\n    byLengthLight = true;\n    reverseLight = true;\n    reversedState = false;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={byAlphabet}\n          type=\"button\"\n          className={`button is-info ${byAlphabetLight && 'is-light'}`}\n          install\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={byLength}\n          type=\"button\"\n          className={`button is-success ${byLengthLight && 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={`button is-warning ${reverseLight && 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={reset}\n          type=\"button\"\n          className={`button is-danger is-light ${reserVisible && 'hiden'}`}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => <li>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}