{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isReversed","setIsReversed","alpLightOff","setalpLightOff","lengthLightOff","setlengthLightOff","reversLightOff","setreversLightOff","isHiden","setisHiden","action","currentArr","revers","initialArr","initiator","sortAlphabet","sort","el1","el2","localeCompare","sortLength","length","reverse","className","onClick","type","map","item","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAEA,SAASC,EAAOC,EAAYC,EAAQC,EAAYC,GAC9C,IAAMC,EACF,YAAIJ,GAAYK,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,cAAcD,MACnDE,EACF,YAAIT,GAAYK,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAII,OAASH,EAAIG,UAExD,OAAQP,GACN,IAAK,QACHb,GAAc,GACdF,EAAgBc,GAChBV,GAAe,GACfE,GAAkB,GAClBE,GAAkB,GAClBE,GAAW,GACX,MACF,IAAK,UACHR,GAAeD,IAAc,GAC7BD,EAAgBY,EAAWW,WAC3Bf,GAAmBD,IAAkB,GACrCG,GAAW,GACX,MACF,IAAK,WAIDV,EAHGa,EAGaG,EAAaO,UAFbP,GAKlBN,GAAW,GACXN,GAAe,GACfE,GAAkB,GAClB,MACF,IAAK,SAIDN,EAHGa,EAGaQ,EAAWE,UAFXF,GAKlBX,GAAW,GACXN,GAAe,GACfE,GAAkB,GAClB,MAEF,QACEN,EAAgBc,IAItB,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAO,YAChBZ,GACJE,EACAL,EACA,aAEF8B,KAAK,SACLF,UAAS,yBAAoBrB,GAAe,YAR9C,iCAaA,wBACEsB,QAAS,kBAAMd,EAAO,YAChBZ,GACJE,EACAL,EACA,WAEF8B,KAAK,SACLF,UAAS,4BAAuBnB,GAAkB,YARpD,4BAaA,wBACEoB,QAAS,kBAAMd,EAAO,YAChBZ,GACJE,EACAL,EACA,YAEF8B,KAAK,SACLF,UAAS,4BAAuBjB,EAAiB,WAAa,IARhE,qBAaA,wBACEkB,QAAS,kBAAMd,EAAO,YAChBZ,GACJE,EACAL,EACA,UAEF8B,KAAK,SACLF,UAAS,oCAA+Bf,GAAW,SARrD,sBAcF,6BACGV,EAAa4B,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,YCjI3CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1766fe57.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n// import { link } from 'fs';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isReversed, setIsReversed] = useState(false);\n  const [alpLightOff, setalpLightOff] = useState(true);\n  const [lengthLightOff, setlengthLightOff] = useState(true);\n  const [reversLightOff, setreversLightOff] = useState(true);\n  const [isHiden, setisHiden] = useState(true);\n\n  function action(currentArr, revers, initialArr, initiator) {\n    const sortAlphabet\n      = [...currentArr].sort((el1, el2) => el1.localeCompare(el2));\n    const sortLength\n      = [...currentArr].sort((el1, el2) => el1.length - el2.length);\n\n    switch (initiator) {\n      case 'reset':\n        setIsReversed(false);\n        setVisibleGoods(initialArr);\n        setalpLightOff(true);\n        setlengthLightOff(true);\n        setreversLightOff(true);\n        setisHiden(true);\n        break;\n      case 'reverse':\n        setIsReversed(!isReversed && true);\n        setVisibleGoods(currentArr.reverse());\n        setreversLightOff(!reversLightOff && true);\n        setisHiden(false);\n        break;\n      case 'alphabet':\n        if (!revers) {\n          setVisibleGoods(sortAlphabet);\n        } else {\n          setVisibleGoods(sortAlphabet.reverse());\n        }\n\n        setisHiden(false);\n        setalpLightOff(false);\n        setlengthLightOff(true);\n        break;\n      case 'length':\n        if (!revers) {\n          setVisibleGoods(sortLength);\n        } else {\n          setVisibleGoods(sortLength.reverse());\n        }\n\n        setisHiden(false);\n        setalpLightOff(true);\n        setlengthLightOff(false);\n        break;\n\n      default:\n        setVisibleGoods(initialArr);\n    }\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => action(\n            [...visibleGoods],\n            isReversed,\n            goodsFromServer,\n            'alphabet',\n          )}\n          type=\"button\"\n          className={`button is-info ${alpLightOff && 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => action(\n            [...visibleGoods],\n            isReversed,\n            goodsFromServer,\n            'length',\n          )}\n          type=\"button\"\n          className={`button is-success ${lengthLightOff && 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => action(\n            [...visibleGoods],\n            isReversed,\n            goodsFromServer,\n            'reverse',\n          )}\n          type=\"button\"\n          className={`button is-warning ${reversLightOff ? 'is-light' : ''}`}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={() => action(\n            [...visibleGoods],\n            isReversed,\n            goodsFromServer,\n            'reset',\n          )}\n          type=\"button\"\n          className={`button is-danger is-light ${isHiden && 'hiden'}`}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => <li key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}